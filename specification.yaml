openapi: 3.0.3
info:
  title: Time Service
  description: An API for registrating time
  version: 0.0.1

servers:
  - url: https://gtk.klokkinn.no/api/time
    description: Production server

tags:
  - name: Individual
    description: Operations done on individual resources
  - name: Collection
    description: Operations done on a collection of resources

paths:
  /entries:
    get:
      operationId: GetAllEntries
      tags:
        - Collection
      summary: Returns a list of time entries
      responses:
        200:
          description: A list of time entries
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entry'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

    post:
      operationId: AddEntry
      tags:
        - Collection
      summary: Create a new time Entry
      requestBody:
        $ref: '#/components/requestBodies/EntryAsRequestBody'
      responses:
        201:
          description: Successfully created a new time Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        400:
          description: Incorrect or missing values in request body
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'


  /entries/{id}:
    get:
      operationId: GetEntry
      tags:
        - Individual
      parameters:
        - $ref: '#/components/parameters/EntryIDPathParameter'
      summary: Get detailed information about a single time Entry
      responses:
        200:
          description: A complete version of a time Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

    patch:
      operationId: UpdateEntry
      tags:
        - Individual
      parameters:
        - $ref: '#/components/parameters/EntryIDPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/EntryAsRequestBody'
      summary: Edit an existing time Entry
      responses:
        200:
          description: The resulting updated time Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

    delete:
      operationId: DeleteEntry
      tags:
        - Individual
      parameters:
        - $ref: '#/components/parameters/EntryIDPathParameter'
      summary: Delete an existing time Entry
      responses:
        200:
          description: The deleted time Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

components:
  schemas:
    Entry:
      description: The main object which describes a timeframe. The time here uses Unix Nano to define time
      required:
        - id
        - start
      properties:
        id:
          type: string
          readOnly: true
          example: 96e077a0-6ccf-4f6e-9233-8c944eae91fa
        start:
          type: string
          example: 1614008868764833589
        end:
          type: string
          example: 1614008868764833589

  responses:
    401:
      description: Not authenticated
    403:
      description: Not authorized
    404:
      description: Not found
    500:
      description: Internal server error

  parameters:
    EntryIDPathParameter:
      name: id
      in: path
      schema:
        type: string
        required: true
        description: ID of the specific time Entry to return

  requestBodies:
    EntryAsRequestBody:
      description: Details about the Entry
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Entry'
